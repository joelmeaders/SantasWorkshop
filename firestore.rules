rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/parameters/admin).data.adminusers;
    }

    match /users/{userId} {
      allow get: if isUser(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isUser(userId);
      allow update: if isUser(userId);
      allow delete: if isAdmin();
    }

    match /registrations/{documentId} {
      allow read: if isUser(resource.data.uid) || isAdmin();
      allow update: if (isUser(request.resource.data.uid) && isUser(resource.data.uid));
      // allow write: if false;
    }

    match /dateTimeSlots/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /checkins/{documentId} {
      allow create: if isAdmin();
      allow read: if isUser(documentId) || isAdmin();
    }

    match /counters/{document=**} {
      allow read: if isAdmin();
      allow write: if false;
    }

    match /registrationsearchindex/{documentId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}
